version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: gaming-api-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: gaming_user
      POSTGRES_PASSWORD: gaming_password
      POSTGRES_DB: gaming_community_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - gaming-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gaming_user -d gaming_community_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgAdmin for Database Visualization
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: gaming-api-pgadmin
    restart: unless-stopped
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@gaming.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - gaming-network
    depends_on:
      - postgres

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: gaming-api-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - gaming-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: redis-server --appendonly yes

  # NestJS API (optional - for production deployment)
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: gaming-api
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      REDIS_HOST: redis
      REDIS_PORT: 6379
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - gaming-network
    volumes:
      - ./logs:/app/logs
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  gaming-network:
    driver: bridge